{"version":3,"sources":["Products.js","App.js","reportWebVitals.js","index.js"],"names":["Products","_ref","data","_jsx","children","className","map","_jsxs","class","style","src","recipe","image","alt","label","Math","round","calories","href","App","search","setSearch","useState","setData","onSubmit","e","preventDefault","fetch","then","response","json","hits","type","value","onChange","target","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"0JAyBeA,MAvBEC,IAAa,IAAZ,KAACC,GAAKD,EACpB,OACIE,cAAA,OAAAC,SACID,cAAA,OAAKE,UAAU,MAAKD,SACfF,EAAKI,KAAIJ,GACVC,cAAA,OAAKE,UAAU,WAAUD,SACrBG,eAAA,OAAKC,MAAM,OAAOC,MAAO,CAAC,MAAS,SAASL,SAAA,CAC5CD,cAAA,OAAKK,MAAM,eAAeE,IAAKR,EAAKS,OAAOC,MAAOC,IAAI,mBACtDV,cAAA,OAAKK,MAAM,YAAWJ,SACtBG,eAAA,UAAAH,SAAA,CACID,cAAA,MAAIK,MAAM,aAAYJ,SAAEF,EAAKS,OAAOG,QACpCP,eAAA,KAAGC,MAAM,YAAWJ,SAAA,CAAC,8BAA4BW,KAAKC,MAAMd,EAAKS,OAAOM,aACxEd,cAAA,KAAGe,KAAK,IAAIV,MAAM,kBAAiBJ,SAAC,uBAO9C,ECSCe,MA3BHA,KACV,MAAOC,EAAOC,GAAaC,mBAAS,KAC7BpB,EAAKqB,GAAWD,mBAAS,IAWhC,OACEnB,cAAA,OAAAC,SACEG,eAAA,UAAAH,SAAA,CACED,cAAA,MAAAC,SAAI,oBACJG,eAAA,QAAMiB,SAZUC,IACpBA,EAAEC,iBACFC,MAAM,mCAAmCP,gHAA0GQ,MACjJC,GAAYA,EAASC,SACrBF,MACA1B,GAAQqB,EAAQrB,EAAK6B,OACtB,EAMiC3B,SAAA,CAC5BD,cAAA,SAAO6B,KAAK,OAAOC,MAAOb,EAAQc,SAAWT,GAAMJ,EAAUI,EAAEU,OAAOF,SAAS,IAAC9B,cAAA,SAChFA,cAAA,SAAO6B,KAAK,SAAS3B,UAAU,kBAAkB4B,MAAM,cAExD/B,EAAKkC,QAAQ,EAAIjC,cAACH,EAAQ,CAAEE,KAAMA,IAAQ,SAEzC,ECdKmC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK3B,IAAkD,IAAjD,OAAEuC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS3C,EACpEuC,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,ECHFO,IAASC,OACP3C,cAAC4C,IAAMC,WAAU,CAAA5C,SACfD,cAACgB,EAAG,MAEN8B,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.b865b2d3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Products = ({data}) => {\n    return (\n        <div>\n            <div className=\"row\">\n                {data.map(data =>  \n                <div className=\"col-md-4\">\n                    <div class=\"card\" style={{\"width\": \"18rem\"}}>\n                    <img class=\"card-img-top\" src={data.recipe.image} alt=\"Card image cap\" />\n                    <div class=\"card-body\">\n                    <center>\n                        <h5 class=\"card-title\">{data.recipe.label}</h5>\n                        <p class=\"card-text\">Total Amount Of Calories : {Math.round(data.recipe.calories)}</p>\n                        <a href=\"#\" class=\"btn btn-primary\">Buy</a>\n                        </center>\n                    </div>\n                    </div>\n                </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Products\n","import React,{useState} from 'react'\nimport Products from './Products';\n\nconst App = () => {\n  const [search,setSearch] = useState('');\n  const [data,setData] = useState([]);\n  const YOUR_APP_ID = \"80b18383\";\n  const YOUR_APP_KEY =\"7fdcf1b1e92e7fff12c71dc79db20a70\";\n  const submitHandler = e =>{\n    e.preventDefault();\n    fetch(`https://api.edamam.com/search?q=${search}&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&from=0&to=30&calories=591-722&health=alcohol-free`).then(\n      response => response.json()\n    ).then(\n      data => setData(data.hits)\n    )\n  }\n  return (\n    <div>\n      <center>\n        <h4>Food Recipe App</h4>\n        <form onSubmit={submitHandler}>\n          <input type=\"text\" value={search} onChange={(e) => setSearch(e.target.value)}/> <br/>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Search\"/>\n        </form>\n        {data.length>=1 ? <Products  data={data}/>:null}\n      </center>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}